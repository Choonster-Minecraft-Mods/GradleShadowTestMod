buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '1.4.2'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'net.minecraftforge.gradle.forge'

import org.ajoberstar.grgit.Grgit

ext.repo = Grgit.open()

version = "${mc_version}-${mod_version}-${repo.head().abbreviatedId}"
group = "${package_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_name}"

srcCompat = JavaVersion.VERSION_1_8
targetCompat = JavaVersion.VERSION_1_8

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    makeObfSourceJar = false

    useDepAts = true

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version

    coreMod = 'com.choonster.gradleshadowtestmod.coremod.GradleShadowTestModCorePlugin'
}

dependencies {
    compile 'com.github.docker-java:docker-java:2.2.1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.1.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.1.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.1.1'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.1.2'
    compile 'org.glassfish.jersey.connectors:jersey-apache-connector:2.11'
    compile 'org.glassfish.jersey.core:jersey-common:2.11'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.11'
    compile 'org.glassfish.hk2:osgi-resource-locator:1.0.1'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0'
    compile 'org.apache.httpcomponents:httpclient:4.3.1'
    compile 'org.apache.httpcomponents:httpcore:4.3'
    compile 'commons-logging:commons-logging:1.1.3'
    compile 'org.glassfish.jersey.core:jersey-client:2.11'
    compile 'org.glassfish.hk2:hk2-api:2.3.0-b05'
    compile 'org.glassfish.hk2:hk2-utils:2.3.0-b05'
    compile 'org.glassfish.hk2.external:aopalliance-repackaged:2.3.0-b05'
    compile 'org.glassfish.hk2.external:javax.inject:2.3.0-b05'
    compile 'org.glassfish.hk2:hk2-locator:2.3.0-b05'
    compile 'org.javassist:javassist:3.18.1-GA'
    compile 'de.gesellix:unix-socket-factory:2015-01-27T15-02-14'
    compile 'org.apache.commons:commons-compress:1.5'
    compile 'org.tukaani:xz:1.2'
    compile 'commons-codec:commons-codec:1.8'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-io:commons-io:2.3'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:jcl-over-slf4j:1.7.12'
    compile 'com.google.guava:guava:18.0'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.51'
    compile 'org.bouncycastle:bcprov-jdk15on:1.51'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.0-beta9'
}

jar {
    manifest {
        attributes FMLCorePluginContainsFMLMod: true
    }
}

shadowJar {
    classifier '' // Replace the default JAR
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-Xlint:unchecked')
}

artifacts {
    archives shadowJar
}
